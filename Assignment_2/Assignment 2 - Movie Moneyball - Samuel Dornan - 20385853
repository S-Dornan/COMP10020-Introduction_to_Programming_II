{"cells":[{"cell_type":"markdown","metadata":{"id":"Znjw3MYISIMx"},"source":["# COMP 10020 Introduction to Programming 2\n","## Assignment 2 - Movie Moneyball"]},{"cell_type":"markdown","metadata":{"id":"ST-2dt9ySINY"},"source":["The rise of popularity of **data science** has led to data science techniques being applied in some unexpected places, and to the release of some very interesting datasets. There are very few areas in which data science techniques are not making a difference.\n","\n","One area where data is driving decision making is the movie business. Data is being used to understand the performance of movies and even make decisions about what movies to make. The goal of this assignment is to use data about movie releases from 1916 to 2017 to answer a series of questions. "]},{"cell_type":"markdown","metadata":{"id":"UCeZDxfhSINb"},"source":["### Import Useful Packages\n","Import useful packages for data science"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X7pj3IyZSINd"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import scipy\n","import matplotlib.pyplot as plt\n","%matplotlib inline  \n","import seaborn as sns"]},{"cell_type":"markdown","metadata":{"id":"EUtAr7dISINk"},"source":["### Question 1: Import Data"]},{"cell_type":"markdown","metadata":{"id":"z3UgSO5CSINm"},"source":["Details of a large collection of movies released between 1916 and 2017 are contained in the file **movies.csv** and **casts.csv**. Each row within **movies.csv** describes a movie, using the following fields:\n","\n","* **id**: A unique ID of the movie\n","* **title**: The title of the movie\n","* **tagline**: The tagline for the movie\n","* **homepage**: A URL for the homepage of the movie (may no longer exist)\n","* **release_date**: The release date of the movie as dd/mm/yyyy\n","* **genre**: A category indicating the main genre of the movie\n","* **budget**: The budget of the movie in US dollars\n","* **keywords**: A list of keywords describing the movie\n","* **original_language** The original language of the movie (as a two letter abbreviation, e.g. en for English)\n","* **revenue**: The revenue earned by the movie in US dollars\n","* **runtime**: The runtime of the movie in minutes\n","* **status**: The status of the movie (one of *Released*, *Rumored*, or *Post Production*)\n","* **vote_average**: The average rating for the movie (from 0 to 10)\n","* **vote_count**: The number of ratings that have been provided for the movie\n","* **director**: The director of the movie\n","       \n","Each row within **casts.csv** contains the id of a movie and the name of an actor in that move. This file uses the following fields:\n","\n","* **id**: The id of the movie\n","* **billing**: The billing of the actor (one of *cast_0*, *cast_1*, *cast_2*, or *cast_3*)\n","* **actor**: The name of the actor\n","\n","Load the two datasets (**movies.csv** and **casts.csv**) into pandas data frames: **movies** and **casts**. Display the first five rows from each."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kSCK_j4pSINp","executionInfo":{"status":"ok","timestamp":1650908358847,"user_tz":-60,"elapsed":99,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"outputId":"3124ba7f-7980-428c-b7b0-d35f9fe64f75"},"outputs":[{"output_type":"stream","name":"stdout","text":["Movies:\n","       id                                     title  \\\n","0   19995                                    Avatar   \n","1     285  Pirates of the Caribbean: At World's End   \n","2  206647                                   Spectre   \n","3   49026                     The Dark Knight Rises   \n","4   49529                               John Carter   \n","\n","                                          tagline  \\\n","0                     Enter the World of Pandora.   \n","1  At the end of the world, the adventure begins.   \n","2                           A Plan No One Escapes   \n","3                                 The Legend Ends   \n","4            Lost in our world, found in another.   \n","\n","                                       homepage release_date      genre  \\\n","0                   http://www.avatarmovie.com/   10/12/2009     Action   \n","1  http://disney.go.com/disneypictures/pirates/   19/05/2007  Adventure   \n","2   http://www.sonypictures.com/movies/spectre/   26/10/2015     Action   \n","3            http://www.thedarkknightrises.com/   16/07/2012     Action   \n","4          http://movies.disney.com/john-carter   07/03/2012     Action   \n","\n","      budget                                           keywords  \\\n","0  237000000  culture clash future space war space colony so...   \n","1  300000000  ocean drug abuse exotic island east india trad...   \n","2  245000000         spy based on novel secret agent sequel mi6   \n","3  250000000  dc comics crime fighter terrorist secret ident...   \n","4  260000000  based on novel mars medallion space travel pri...   \n","\n","  original_language     revenue  runtime    status  vote_average  vote_count  \\\n","0                en  2787965087    162.0  Released           7.2       11800   \n","1                en   961000000    169.0  Released           6.9        4500   \n","2                en   880674609    148.0  Released           6.3        4466   \n","3                en  1084939099    165.0  Released           7.6        9106   \n","4                en   284139100    132.0  Released           6.1        2124   \n","\n","            director  \n","0      James Cameron  \n","1     Gore Verbinski  \n","2         Sam Mendes  \n","3  Christopher Nolan  \n","4     Andrew Stanton  \n","Casts:\n","       id billing            actor\n","0   19995  cast_0  Sam Worthington\n","1     285  cast_0      Johnny Depp\n","2  206647  cast_0     Daniel Craig\n","3   49026  cast_0   Christian Bale\n","4   49529  cast_0    Taylor Kitsch\n"]}],"source":["# Write code here\n","movies = pd.read_csv(\"movies.csv\")\n","casts = pd.read_csv(\"casts.csv\")\n","\n","print(\"Movies:\")\n","print(movies.head(5))\n","print(\"Casts:\")\n","print(casts.head(5))"]},{"cell_type":"markdown","metadata":{"id":"o68BCM8FSINs"},"source":["### Question 2: Tidy"]},{"cell_type":"markdown","metadata":{"id":"A_SkQsbsSINu"},"source":["Define a function to extract the month part from a date given as dd/mm/yyyy."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uBjB_Mp7SINy"},"outputs":[],"source":["def date_to_month(d):\n","    if(type(d) != str):\n","        return np.NaN\n","    else:\n","        date_parts = d.split('/')\n","        month = date_parts[1]\n","        return int(month)"]},{"cell_type":"markdown","metadata":{"id":"bn0VJl72SIN1"},"source":["Extract months from the release date for each movie to add a new column **release_month**. The pandas Series **apply** function used together with the **date_to_month** function defined above can be used for this."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"egx15uEnSIN2","executionInfo":{"status":"ok","timestamp":1650908358850,"user_tz":-60,"elapsed":96,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/","height":808},"outputId":"9406e55e-10a0-4f89-f364-724426338b29"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       id                                     title  \\\n","0   19995                                    Avatar   \n","1     285  Pirates of the Caribbean: At World's End   \n","2  206647                                   Spectre   \n","3   49026                     The Dark Knight Rises   \n","4   49529                               John Carter   \n","\n","                                          tagline  \\\n","0                     Enter the World of Pandora.   \n","1  At the end of the world, the adventure begins.   \n","2                           A Plan No One Escapes   \n","3                                 The Legend Ends   \n","4            Lost in our world, found in another.   \n","\n","                                       homepage release_date      genre  \\\n","0                   http://www.avatarmovie.com/   10/12/2009     Action   \n","1  http://disney.go.com/disneypictures/pirates/   19/05/2007  Adventure   \n","2   http://www.sonypictures.com/movies/spectre/   26/10/2015     Action   \n","3            http://www.thedarkknightrises.com/   16/07/2012     Action   \n","4          http://movies.disney.com/john-carter   07/03/2012     Action   \n","\n","      budget                                           keywords  \\\n","0  237000000  culture clash future space war space colony so...   \n","1  300000000  ocean drug abuse exotic island east india trad...   \n","2  245000000         spy based on novel secret agent sequel mi6   \n","3  250000000  dc comics crime fighter terrorist secret ident...   \n","4  260000000  based on novel mars medallion space travel pri...   \n","\n","  original_language     revenue  runtime    status  vote_average  vote_count  \\\n","0                en  2787965087    162.0  Released           7.2       11800   \n","1                en   961000000    169.0  Released           6.9        4500   \n","2                en   880674609    148.0  Released           6.3        4466   \n","3                en  1084939099    165.0  Released           7.6        9106   \n","4                en   284139100    132.0  Released           6.1        2124   \n","\n","            director  release_month  \n","0      James Cameron             12  \n","1     Gore Verbinski              5  \n","2         Sam Mendes             10  \n","3  Christopher Nolan              7  \n","4     Andrew Stanton              3  "],"text/html":["\n","  <div id=\"df-252cc204-fa65-448a-857d-25e54eef1318\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>tagline</th>\n","      <th>homepage</th>\n","      <th>release_date</th>\n","      <th>genre</th>\n","      <th>budget</th>\n","      <th>keywords</th>\n","      <th>original_language</th>\n","      <th>revenue</th>\n","      <th>runtime</th>\n","      <th>status</th>\n","      <th>vote_average</th>\n","      <th>vote_count</th>\n","      <th>director</th>\n","      <th>release_month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19995</td>\n","      <td>Avatar</td>\n","      <td>Enter the World of Pandora.</td>\n","      <td>http://www.avatarmovie.com/</td>\n","      <td>10/12/2009</td>\n","      <td>Action</td>\n","      <td>237000000</td>\n","      <td>culture clash future space war space colony so...</td>\n","      <td>en</td>\n","      <td>2787965087</td>\n","      <td>162.0</td>\n","      <td>Released</td>\n","      <td>7.2</td>\n","      <td>11800</td>\n","      <td>James Cameron</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>285</td>\n","      <td>Pirates of the Caribbean: At World's End</td>\n","      <td>At the end of the world, the adventure begins.</td>\n","      <td>http://disney.go.com/disneypictures/pirates/</td>\n","      <td>19/05/2007</td>\n","      <td>Adventure</td>\n","      <td>300000000</td>\n","      <td>ocean drug abuse exotic island east india trad...</td>\n","      <td>en</td>\n","      <td>961000000</td>\n","      <td>169.0</td>\n","      <td>Released</td>\n","      <td>6.9</td>\n","      <td>4500</td>\n","      <td>Gore Verbinski</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>206647</td>\n","      <td>Spectre</td>\n","      <td>A Plan No One Escapes</td>\n","      <td>http://www.sonypictures.com/movies/spectre/</td>\n","      <td>26/10/2015</td>\n","      <td>Action</td>\n","      <td>245000000</td>\n","      <td>spy based on novel secret agent sequel mi6</td>\n","      <td>en</td>\n","      <td>880674609</td>\n","      <td>148.0</td>\n","      <td>Released</td>\n","      <td>6.3</td>\n","      <td>4466</td>\n","      <td>Sam Mendes</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>49026</td>\n","      <td>The Dark Knight Rises</td>\n","      <td>The Legend Ends</td>\n","      <td>http://www.thedarkknightrises.com/</td>\n","      <td>16/07/2012</td>\n","      <td>Action</td>\n","      <td>250000000</td>\n","      <td>dc comics crime fighter terrorist secret ident...</td>\n","      <td>en</td>\n","      <td>1084939099</td>\n","      <td>165.0</td>\n","      <td>Released</td>\n","      <td>7.6</td>\n","      <td>9106</td>\n","      <td>Christopher Nolan</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>49529</td>\n","      <td>John Carter</td>\n","      <td>Lost in our world, found in another.</td>\n","      <td>http://movies.disney.com/john-carter</td>\n","      <td>07/03/2012</td>\n","      <td>Action</td>\n","      <td>260000000</td>\n","      <td>based on novel mars medallion space travel pri...</td>\n","      <td>en</td>\n","      <td>284139100</td>\n","      <td>132.0</td>\n","      <td>Released</td>\n","      <td>6.1</td>\n","      <td>2124</td>\n","      <td>Andrew Stanton</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-252cc204-fa65-448a-857d-25e54eef1318')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-252cc204-fa65-448a-857d-25e54eef1318 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-252cc204-fa65-448a-857d-25e54eef1318');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":142}],"source":["movies['release_month'] = movies[\"release_date\"].apply(date_to_month)\n","movies.head()"]},{"cell_type":"markdown","metadata":{"id":"JJCefF-qSIN3"},"source":["**a)** Define a function to extract the year part from a date given as dd/mm/yyyy."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f1UqAx8eSIN4"},"outputs":[],"source":["def date_to_year(d):\n","    if(type(d) != str):\n","      return np.NaN\n","    else:\n","      date_parts = d.split('/')\n","      year = date_parts[2]\n","      return int(year)\n","    # Write code here\n"]},{"cell_type":"markdown","metadata":{"id":"L14nb1UESIN6"},"source":["**b)** Extract the year from the release date for each movie to add a new column **release_year**. The pandas Series **apply** function used together with the **date_to_year** function defined above can be used for this."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pjQyuU5hSIN7","executionInfo":{"status":"ok","timestamp":1650908358853,"user_tz":-60,"elapsed":96,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/","height":808},"outputId":"b32feedc-92db-4fa9-d1ef-28b0b1300dba"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       id                                     title  \\\n","0   19995                                    Avatar   \n","1     285  Pirates of the Caribbean: At World's End   \n","2  206647                                   Spectre   \n","3   49026                     The Dark Knight Rises   \n","4   49529                               John Carter   \n","\n","                                          tagline  \\\n","0                     Enter the World of Pandora.   \n","1  At the end of the world, the adventure begins.   \n","2                           A Plan No One Escapes   \n","3                                 The Legend Ends   \n","4            Lost in our world, found in another.   \n","\n","                                       homepage release_date      genre  \\\n","0                   http://www.avatarmovie.com/   10/12/2009     Action   \n","1  http://disney.go.com/disneypictures/pirates/   19/05/2007  Adventure   \n","2   http://www.sonypictures.com/movies/spectre/   26/10/2015     Action   \n","3            http://www.thedarkknightrises.com/   16/07/2012     Action   \n","4          http://movies.disney.com/john-carter   07/03/2012     Action   \n","\n","      budget                                           keywords  \\\n","0  237000000  culture clash future space war space colony so...   \n","1  300000000  ocean drug abuse exotic island east india trad...   \n","2  245000000         spy based on novel secret agent sequel mi6   \n","3  250000000  dc comics crime fighter terrorist secret ident...   \n","4  260000000  based on novel mars medallion space travel pri...   \n","\n","  original_language     revenue  runtime    status  vote_average  vote_count  \\\n","0                en  2787965087    162.0  Released           7.2       11800   \n","1                en   961000000    169.0  Released           6.9        4500   \n","2                en   880674609    148.0  Released           6.3        4466   \n","3                en  1084939099    165.0  Released           7.6        9106   \n","4                en   284139100    132.0  Released           6.1        2124   \n","\n","            director  release_month  release_year  \n","0      James Cameron             12          2009  \n","1     Gore Verbinski              5          2007  \n","2         Sam Mendes             10          2015  \n","3  Christopher Nolan              7          2012  \n","4     Andrew Stanton              3          2012  "],"text/html":["\n","  <div id=\"df-aac722e8-653a-4bad-abc3-0e9772c7cf42\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>tagline</th>\n","      <th>homepage</th>\n","      <th>release_date</th>\n","      <th>genre</th>\n","      <th>budget</th>\n","      <th>keywords</th>\n","      <th>original_language</th>\n","      <th>revenue</th>\n","      <th>runtime</th>\n","      <th>status</th>\n","      <th>vote_average</th>\n","      <th>vote_count</th>\n","      <th>director</th>\n","      <th>release_month</th>\n","      <th>release_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>19995</td>\n","      <td>Avatar</td>\n","      <td>Enter the World of Pandora.</td>\n","      <td>http://www.avatarmovie.com/</td>\n","      <td>10/12/2009</td>\n","      <td>Action</td>\n","      <td>237000000</td>\n","      <td>culture clash future space war space colony so...</td>\n","      <td>en</td>\n","      <td>2787965087</td>\n","      <td>162.0</td>\n","      <td>Released</td>\n","      <td>7.2</td>\n","      <td>11800</td>\n","      <td>James Cameron</td>\n","      <td>12</td>\n","      <td>2009</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>285</td>\n","      <td>Pirates of the Caribbean: At World's End</td>\n","      <td>At the end of the world, the adventure begins.</td>\n","      <td>http://disney.go.com/disneypictures/pirates/</td>\n","      <td>19/05/2007</td>\n","      <td>Adventure</td>\n","      <td>300000000</td>\n","      <td>ocean drug abuse exotic island east india trad...</td>\n","      <td>en</td>\n","      <td>961000000</td>\n","      <td>169.0</td>\n","      <td>Released</td>\n","      <td>6.9</td>\n","      <td>4500</td>\n","      <td>Gore Verbinski</td>\n","      <td>5</td>\n","      <td>2007</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>206647</td>\n","      <td>Spectre</td>\n","      <td>A Plan No One Escapes</td>\n","      <td>http://www.sonypictures.com/movies/spectre/</td>\n","      <td>26/10/2015</td>\n","      <td>Action</td>\n","      <td>245000000</td>\n","      <td>spy based on novel secret agent sequel mi6</td>\n","      <td>en</td>\n","      <td>880674609</td>\n","      <td>148.0</td>\n","      <td>Released</td>\n","      <td>6.3</td>\n","      <td>4466</td>\n","      <td>Sam Mendes</td>\n","      <td>10</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>49026</td>\n","      <td>The Dark Knight Rises</td>\n","      <td>The Legend Ends</td>\n","      <td>http://www.thedarkknightrises.com/</td>\n","      <td>16/07/2012</td>\n","      <td>Action</td>\n","      <td>250000000</td>\n","      <td>dc comics crime fighter terrorist secret ident...</td>\n","      <td>en</td>\n","      <td>1084939099</td>\n","      <td>165.0</td>\n","      <td>Released</td>\n","      <td>7.6</td>\n","      <td>9106</td>\n","      <td>Christopher Nolan</td>\n","      <td>7</td>\n","      <td>2012</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>49529</td>\n","      <td>John Carter</td>\n","      <td>Lost in our world, found in another.</td>\n","      <td>http://movies.disney.com/john-carter</td>\n","      <td>07/03/2012</td>\n","      <td>Action</td>\n","      <td>260000000</td>\n","      <td>based on novel mars medallion space travel pri...</td>\n","      <td>en</td>\n","      <td>284139100</td>\n","      <td>132.0</td>\n","      <td>Released</td>\n","      <td>6.1</td>\n","      <td>2124</td>\n","      <td>Andrew Stanton</td>\n","      <td>3</td>\n","      <td>2012</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aac722e8-653a-4bad-abc3-0e9772c7cf42')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aac722e8-653a-4bad-abc3-0e9772c7cf42 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aac722e8-653a-4bad-abc3-0e9772c7cf42');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":144}],"source":["# Write code here\n","movies['release_year'] = movies[\"release_date\"].apply(date_to_year)\n","movies.head()"]},{"cell_type":"markdown","metadata":{"id":"9S86Ba97SIN9"},"source":["### Question 3: Simple Analysis\n","\n","Use simple data analysis to answer the following questions. "]},{"cell_type":"markdown","metadata":{"id":"l-mC0f5_SIN9"},"source":["**a)** How many directors have released movies included in the dataset?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cOzDCaTWSIN_","executionInfo":{"status":"ok","timestamp":1650908358855,"user_tz":-60,"elapsed":96,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"1d889047-02ef-4c23-cb92-735ceab0afb7"},"outputs":[{"output_type":"stream","name":"stdout","text":["2102 directors have released movies included in the dataset\n"]}],"source":["# Write code here\n","directors = len(movies['director'].unique())\n","directors = str(directors)\n","print(directors+\" directors have released movies included in the dataset\")"]},{"cell_type":"markdown","metadata":{"id":"agGRib3-SIOB"},"source":["**b)** Generate and print a table showing many times movies have been released in each *genre*?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hNvDvricSIOC","executionInfo":{"status":"ok","timestamp":1650908358857,"user_tz":-60,"elapsed":86,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b7a125bf-14b2-44c4-8b61-b54a7829ff4a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drama          1100\n","Comedy          950\n","Action          702\n","Adventure       327\n","Horror          278\n","Crime           184\n","Thriller        170\n","Fantasy         112\n","Animation       111\n","Romance          98\n","Science          93\n","Documentary      73\n","Family           45\n","Mystery          39\n","Music            32\n","History          25\n","War              24\n","Western          23\n","TV                2\n","Foreign           1\n","Name: genre, dtype: int64\n"]}],"source":["# Write code here\n","\n","#NB value_counts()\n","genres = movies['genre'].value_counts()\n","print(genres)"]},{"cell_type":"markdown","metadata":{"id":"IjhXJ9sgSIOD"},"source":["**c)** How many movies have been released under the *Horror* genre?"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"HG9zAwqNSIOD","executionInfo":{"status":"ok","timestamp":1650908358858,"user_tz":-60,"elapsed":82,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4c312038-b5eb-4e9c-9d95-56691e5cce5d"},"outputs":[{"output_type":"stream","name":"stdout","text":["278 films have been released under the Horror genre.\n"]}],"source":["# Write code here\n","selected_genre = 'Horror'\n","horror_films = genres.loc[selected_genre]\n","horror_films = str(horror_films)\n","print(horror_films+\" films have been released under the \"+selected_genre+\" genre.\")"]},{"cell_type":"markdown","metadata":{"id":"G8_hppPYSIOE"},"source":["**d)** In which month are movies most frequently relased?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HC3eE_KGSIOF","executionInfo":{"status":"ok","timestamp":1650908358860,"user_tz":-60,"elapsed":78,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"ad804cfc-a896-4b7f-e1d5-2d14d921e8bc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Movies are most frequently released in September\n"]}],"source":["# Write code here\n","movies['release_date_as_datetime'] = pd.to_datetime(movies['release_date'], format=\"%d/%m/%Y\")\n","movies['release_month_as_string'] = movies['release_date_as_datetime'].dt.month_name()\n","release_month = movies['release_month_as_string'].value_counts()\n","release_month = release_month.to_frame()\n","release_month = release_month.reset_index()\n","most_frequent = release_month.iloc[0, 0]\n","\n","print(\"Movies are most frequently released in\", most_frequent)"]},{"cell_type":"markdown","metadata":{"id":"f7hBCRUuSIOF"},"source":["**e)** Who are the ten most prolific *directors* in the dataset? (We define *prolific* as the directors who have released the most movies)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xS8-pgWjSIOG","executionInfo":{"status":"ok","timestamp":1650908358865,"user_tz":-60,"elapsed":80,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"49c1294c-8321-42c6-b15f-b14686c71809"},"outputs":[{"output_type":"stream","name":"stdout","text":["The ten most prolific directors are Steven Spielberg, Woody Allen, Martin Scorsese, Clint Eastwood, Ridley Scott, Renny Harlin, Steven Soderbergh, Robert Rodriguez, Tim Burton and Oliver Stone\n"]}],"source":["# Write code here\n","directors = movies['director']\n","directors = movies['director'].value_counts()\n","directors = directors.reset_index()\n","most_prolific_directors = directors.iloc[0:10, 0]\n","most_prolific_directors = most_prolific_directors.to_list()\n","last_director = most_prolific_directors[-1]\n","most_prolific_directors = most_prolific_directors[:-1]\n","most_prolific_directors = str(most_prolific_directors)\n","most_prolific_directors = most_prolific_directors.replace('\\'', '')\n","most_prolific_directors = most_prolific_directors.replace('[', '')\n","most_prolific_directors = most_prolific_directors.replace(']', '')\n","last_director = str(last_director)\n","last_director = last_director.replace('\\'', '')\n","print(\"The ten most prolific directors are \"+most_prolific_directors+\" and \"+last_director)"]},{"cell_type":"markdown","metadata":{"collapsed":true,"id":"zSRoMcaJSIOG"},"source":["### Question 4: Deeper Analysis\n","\n","Use slightly more advanced data analysis to answer the following questions."]},{"cell_type":"markdown","metadata":{"id":"3jP0FeF5SIOH"},"source":["**a)** Draw an appropriate data visualisation that shows the number of movies released each year?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p1yGO7bzSIOI","executionInfo":{"status":"ok","timestamp":1650908358867,"user_tz":-60,"elapsed":78,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"b781f7c5-5dd5-4803-d67b-257e7867f80a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# Write code here\n","movies_by_release_year = movies['release_year'].value_counts()\n","movies_by_release_year = movies_by_release_year.to_frame()\n","movies_by_release_year = movies_by_release_year.sort_index()\n","#movies_by_release_year = movies_by_release_year.reset_index()\n","plt.plot(movies_by_release_year['release_year'])\n","plt.show()\n","#movies_by_release_year"]},{"cell_type":"markdown","metadata":{"id":"zAogAjQASIOI"},"source":["**b)** What is the average duration of a movie (in minutes)?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5srxlKyaSIOI","executionInfo":{"status":"ok","timestamp":1650908358869,"user_tz":-60,"elapsed":78,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0cccca4b-4df9-43d8-d5b9-13f5dbb0edfc"},"outputs":[{"output_type":"stream","name":"stdout","text":["The average runtime of a movie is 108 minutes\n"]}],"source":["# Write code here\n","average_runtime = movies['runtime'].mean()\n","average_runtime = round(average_runtime, 0)\n","average_runtime = int(average_runtime)\n","print('The average runtime of a movie is', average_runtime, \"minutes\")"]},{"cell_type":"markdown","metadata":{"id":"YkpjvpdmSIOJ"},"source":["**c)** How many times has there been a movie described with the keyword '*spoof*'?\n","\n","**Hint:** Experiment with the *str.contains* method from *pandas.Series*."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LCpxhYSPSIOJ","executionInfo":{"status":"ok","timestamp":1650908358871,"user_tz":-60,"elapsed":75,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0cac5a7a-fff5-4a77-bc8f-46440d8f1bb1"},"outputs":[{"output_type":"stream","name":"stdout","text":["21 films have been described as spoofs\n"]}],"source":["# Write code here\n","keywords = movies['keywords']\n","tagline = movies['tagline']\n","spoof_keywords = keywords.str.contains(\"spoof\")\n","spoof_tagline = tagline.str.contains(\"spoof\")\n","#print(spoof_keywords)\n","\n","spoof_keywords = spoof_keywords[spoof_keywords == True]\n","spoof_tagline = spoof_tagline[spoof_tagline == True]\n","spoof_keywords.append(spoof_tagline)\n","number_of_spoofs = len(spoof_keywords)\n","print(number_of_spoofs, \"films have been described as spoofs\")"]},{"cell_type":"markdown","metadata":{"id":"Q4NX36LKSIOK"},"source":["**d)** Which actor has starred in the most movies in the dataset? "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jEH7x-qzSIOK","executionInfo":{"status":"ok","timestamp":1650908358874,"user_tz":-60,"elapsed":73,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"06f2b1f2-cbab-41df-d6d1-9947b8ce2762"},"outputs":[{"output_type":"stream","name":"stdout","text":["Robert DeNiro has starred in the most movies in the dataset\n"]}],"source":["# Write code here\n","most_frequent_actors = casts['actor'].value_counts()\n","most_frequent_actors = most_frequent_actors.reset_index()\n","most_frequent_actor = most_frequent_actors.iloc[0, 0]\n","print(most_frequent_actor, \"has starred in the most movies in the dataset\")"]},{"cell_type":"markdown","metadata":{"id":"3ADqMJLjSIOL"},"source":["**e)** Have movies by *Steven Spielberg* had higher revenues, on average, than movies by *Ridley Scott*?\n","\n","**Bonus:** Can you plot a data visualisation to support this conclusion?\n","\n","**Source:**\n","\n","    https://matplotlib.org/stable/gallery/pie_and_polar_charts/pie_features.html"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ExTwUI5XSIOM","executionInfo":{"status":"ok","timestamp":1650908358876,"user_tz":-60,"elapsed":71,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/","height":281},"outputId":"c45bba4a-4930-421b-e8fe-28ebe8122d03"},"outputs":[{"output_type":"stream","name":"stdout","text":["On average, movies by Steven Spielberg had higher revenues than movies by Ridley Scott\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Write code here\n","revenue_and_director = movies.loc[:, ['revenue', 'director']]\n","revenue_and_director\n","\n","director1 = 'Steven Spielberg'\n","director2 = 'Ridley Scott'\n","\n","spielberg = revenue_and_director[revenue_and_director['director'] == director1]\n","spielberg_mean_revenue = spielberg['revenue'].mean()\n","scott = revenue_and_director[revenue_and_director['director'] == director2]\n","scott_mean_revenue = scott['revenue'].mean()\n","#print(spielberg_mean_revenue, scott_mean_revenue)\n","\n","if spielberg_mean_revenue > scott_mean_revenue:\n","  print(\"On average, movies by\", director1, \"had higher revenues than movies by\", director2)\n","elif spielberg_mean_revenue < scott_mean_revenue:\n","  print(\"On average, movies by\", director2, \"had higher revenues than movies by\", director1)\n","else:\n","  print(\"On average, both directors earned the same amount of revenue\")\n","\n","#Can plot this one with a pie chart\n","labels = [director1, director2]\n","spielberg_size = spielberg_mean_revenue/(spielberg_mean_revenue+scott_mean_revenue)\n","scott_size = scott_mean_revenue/(spielberg_mean_revenue+scott_mean_revenue)\n","slice_sizes = [spielberg_size, scott_size]\n","\n","fig1, ax1 = plt.subplots()\n","ax1.pie(slice_sizes, labels=labels, autopct='%1.1f%%')\n","ax1.axis('equal')\n","plt.title(\"Cumulative revenues of \"+director1+\" and \"+director2)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"jbBDET_LSIOM"},"source":["**f)** Which director has earned the highest cumulative revenue for movies in the dataset released in the year 2000 or later?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2nWOXSotSION","executionInfo":{"status":"ok","timestamp":1650908360572,"user_tz":-60,"elapsed":1762,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a25d9b39-ec5b-4e9d-9d4b-adc22214b01b"},"outputs":[{"output_type":"stream","name":"stdout","text":["The director with the highest cumulative revenue for the specified time period is Peter Jackson\n"]}],"source":["# Write code here\n","\n","revenue_and_director_by_year = movies.loc[:, ['revenue', 'director', 'release_year']]\n","revenue_and_director_by_year = revenue_and_director_by_year[revenue_and_director_by_year['release_year'] >= 2000]\n","directors = revenue_and_director_by_year['director'].value_counts()\n","directors = directors.reset_index()\n","\n","cumulative_revenue = []\n","\n","for director in directors['index']:\n","  selected_director = revenue_and_director_by_year[revenue_and_director_by_year['director'] == director]\n","  revenue_to_be = selected_director['revenue'].sum()\n","  cumulative_revenue.append(revenue_to_be)\n","\n","directors['cumulative_revenue'] = cumulative_revenue\n","directors = directors.sort_values(['cumulative_revenue'], axis=0, ascending=False)\n","highest_paid = directors.iloc[0, 0]\n","\n","print(\"The director with the highest cumulative revenue for the specified time period is\", highest_paid)"]},{"cell_type":"markdown","metadata":{"id":"-8fCNWpzSION"},"source":["### Question 5: Merging Data\n","\n","Answer questions that require merging the **movies** and **casts** datsets."]},{"cell_type":"markdown","metadata":{"id":"sp5Pxi2mSIOO"},"source":["**a)** Which actor starred in the most movies in the year 2002?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RXVDu1G6SIOO","executionInfo":{"status":"ok","timestamp":1650908360574,"user_tz":-60,"elapsed":33,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"11f23b8d-326e-42e8-ef4d-ac1367eb7bf9"},"outputs":[{"output_type":"stream","name":"stdout","text":["The actor who has starred in the most movies in 2002 is Zooey Deschanel\n"]}],"source":["# Write code here\n","merged_df = movies.merge(casts, on=\"id\", how=\"right\")\n","release_year = 2002\n","\n","released_in_2002 = merged_df[merged_df['release_year'] == release_year]\n","actor_counts = released_in_2002['actor'].value_counts()\n","actor_counts = actor_counts.reset_index()\n","most_movies = actor_counts.iloc[0, 0]\n","print(\"The actor who has starred in the most movies in\", release_year, \"is\", most_movies)"]},{"cell_type":"markdown","metadata":{"id":"doewoNvISIOQ"},"source":["**b)** Have movies in the dataset starring '*Will Smith*' earned more cumulative revenue than movies starring '*Chris Rock*', or vice versa? "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wggKxhG2SIOQ","executionInfo":{"status":"ok","timestamp":1650908360576,"user_tz":-60,"elapsed":23,"user":{"displayName":"Samuel Dornan","userId":"12906429549007335385"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b9e03a4c-f1d0-43a9-db0e-98cceef0a067"},"outputs":[{"output_type":"stream","name":"stdout","text":["Movies starring Will Smith earned more cumulative revenue than movies starring Chris Rock\n"]}],"source":["# Write code here\n","actor1 = 'Will Smith'\n","actor2 = 'Chris Rock'\n","\n","revenue_and_actor = merged_df.loc[:, ['revenue', 'actor']]\n","will_smith = revenue_and_actor[revenue_and_actor['actor'] == actor1]\n","chris_rock = revenue_and_actor[revenue_and_actor['actor'] == actor2]\n","will_smith_cumulative_revenue = will_smith['revenue'].sum()\n","chris_rock_cumulative_revenue = chris_rock['revenue'].sum()\n","\n","if will_smith_cumulative_revenue > chris_rock_cumulative_revenue:\n","  print(\"Movies starring\", actor1, \"earned more cumulative revenue than movies starring\", actor2)\n","elif will_smith_cumulative_revenue < chris_rock_cumulative_revenue:\n","  print(\"Movies starring\", actor2, \"earned more cumulative revenue than movies starring\", actor1)\n","else:\n","  print(\"Movies starring\", actor1, \"and\", actor2, \"eaned the same cumulative amount of revenue\")"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":false,"sideBar":true,"skip_h1_title":true,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":true},"colab":{"name":"Assignment 2 - Movie Moneyball - Samuel Dornan - 20385853","provenance":[{"file_id":"1xibc08o9hmZK5wT8HbOzLb80mpt-1mml","timestamp":1650908382855}],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":0}